name: Docker Image CI

on:
  push:
    branches: [ deploy ]
  pull_request:
    branches: [ deploy ]

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./RVPStubAPI
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
      - name: Login Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD}}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
        id: buildx

      - name: Cache Docker Image Layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
            
      - name: Perform build smart-farm-web
        uses: docker/build-push-action@v2
        id: docker_build_web
        with:
          context: ./smart-farm-web
          file: ./smart-farm-web/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USER }}/smart-farm-web

      - name: Perform build smart-farm-api
        uses: docker/build-push-action@v2
        id: docker_build_api
        with:
          context: ./smart-fram-api
          file: ./smart-fram-api/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USER }}/smart-farm-api

      - name: Verify
        run: |
          echo ${{ steps.docker_build_web.outputs.digest }},
          echo ${{ steps.docker_build_api.outputs.digest }}.
